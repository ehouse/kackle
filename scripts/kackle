#!/bin/bash -eu

PROD=1

function compile-folder {
    if ! [[ ${1: -5} == ".html" ]]; then
        echo "$1 must be an html file.\n"
        exit 1
    fi

    if [[ -d $2 ]]; then
        MD_FILES=($(find -L $2 -name "*.md"))
        BLD_FILES=($(sed "s/src/out/g;s/\.md/\.html/g" <<< ${MD_FILES[@]}))
    else
        echo "$2 must be a directory.\n"
        exit 1;
    fi

    for ((i=0; i<${#BLD_FILES[@]};++i)); do
        mkdir -p $(dirname "${BLD_FILES[i]}")
        pandoc --template $1 "${MD_FILES[i]}" -o "${BLD_FILES[i]}"
        printf " BUILD %s -> %s\n" "${MD_FILES[i]}" "${BLD_FILES[i]}"
    done

    project_dest=$(sed "s/src/out/g" <<< $2)

    rsync -qrvzcl --delete "$2/static/"* "$project_dest"
    printf " COPY %s -> %s\n" "$2/static/" "$project_dest"

    if ! (("$PROD")) ;then
        echo -e "User-Agent: *\nDisallow: /" > "$project_dest/robots.txt"
        printf " CREATE DEV robots.txt -> %s\n" "$project_dest/robots.txt"
    else
        echo -e "User-Agent: *\nDisallow: /drafts/" > "$project_dest/robots.txt"
        printf " CREATE PROD robots.txt -> %s\n" "$project_dest/robots.txt"
    fi
}

function format-page {
    echo -e "---"
    for i in "$@";do
        echo -e "$i"
    done
    echo -e "---\n"

}

function create-blogroll {
    if ! [[ -d $1 ]];then
        echo "$1 must be a folder\n"
        exit 1
    fi
    rm -f $1/index.md

    TMPFILE=$(mktemp)
    format-page "title: Blog Posts" > $TMPFILE
    for f in "$1"/*.md;do
        ./scripts/extract_headers.awk "$f"
    done | gsort -k3nr -k1Mr -k2nr | sed "s@$(dirname $1)/@@g" | awk -F ':' \
    '{ gsub(".md",".html");
    printf "<h4 class=\"blog-roll\"> [%s](/%s) </h4>\n", $2, $4
    printf "<p class=\"post-header\"><small><span><strong>Written by Ethan House</strong></span><time>Posted on %s</time></small></p>\n\n", $1
    if ($3)
        printf "%s\n\n", $3
    print "---\n"}' | ghead -n -2 >> $TMPFILE

    cp $TMPFILE $1/index.md
    printf " CREATE index.md -> $1/index.md\n"
}

function create-sitemap {
    if ! [[ -d $1 ]];then
        echo "$1 must be a folder\n"
        exit 1
    fi

    find $1 -name "*.html" | sed "s@$1/@https://$2/@g" | awk -F"\n" \
'BEGIN { print "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \
    <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" \
    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \
    xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 \
    http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\">" }
{ printf "<url>\n\t<loc>%s</loc>\n\t<changefreq>weekly</changefreq>\n</url>\n", $NF }
END { print "</urlset>"}' > $1/sitemap.xml
printf " CREATE sitemap.xml -> $1/sitemap.xml\n"
}

while [ $# -gt 0 ]; do
    case $1 in
        -d|--debug)
            set -x
            shift
            ;;
        -h|--help)
            echo "$0 build TEMPLATE FOLDER"
            exit
            ;;
        -t)
            PROD=0
            shift
            ;;
        -v|--verbose)
            set -v
            shift
            ;;
        blogroll)
            create-blogroll $2
            exit
            ;;
        build)
            compile-folder $2 $3
            exit
            ;;
        sitemap)
            create-sitemap $2 $3
            exit
            ;;
        *)
            echo "usage: kackle [-vd] [-h] command args..."
            exit
            ;;
    esac
done
